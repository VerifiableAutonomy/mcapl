[INFO] Number: 6
Incoming States: 0,6,22,44,106,
True in this State: ~B(follower3,spacing(17.0)),~A(follower3,perf(set_spacing(17.0))),~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),
True in next State: ~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),
Number: 14
Incoming States: 0,6,14,22,44,71,106,
True in this State: ~B(follower3,spacing()),~B(follower3,spacing(17.0)),~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U B(follower3,spacing()),
True in next State: ~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U B(follower3,spacing()),
Number: 22
Incoming States: 0,6,14,22,44,71,106,
True in this State: B(follower3,spacing()),~B(follower3,spacing(17.0)),~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U B(follower3,spacing()),
True in next State: ~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),
Number: 36
Incoming States: 0,6,22,36,44,91,106,
True in this State: ~A(follower3,perf(set_spacing(17.0))),~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U A(follower3,perf(set_spacing(17.0))),
True in next State: ~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U A(follower3,perf(set_spacing(17.0))),
Number: 44
Incoming States: 0,6,22,36,44,91,106,
True in this State: A(follower3,perf(set_spacing(17.0))),~A(follower3,perf(set_spacing(17.0))),~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U A(follower3,perf(set_spacing(17.0))),
True in next State: ~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),
Number: 62
Incoming States: 0,6,14,22,36,44,62,71,91,106,
True in this State: ~B(follower3,spacing()),~A(follower3,perf(set_spacing(17.0))),~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U B(follower3,spacing()),T U A(follower3,perf(set_spacing(17.0))),
True in next State: ~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U B(follower3,spacing()),T U A(follower3,perf(set_spacing(17.0))),
Number: 71
Incoming States: 0,6,14,22,36,44,62,71,91,106,
True in this State: A(follower3,perf(set_spacing(17.0))),~B(follower3,spacing()),~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U B(follower3,spacing()),T U A(follower3,perf(set_spacing(17.0))),
True in next State: ~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U B(follower3,spacing()),
Number: 91
Incoming States: 0,6,14,22,36,44,62,71,91,106,
True in this State: B(follower3,spacing()),~A(follower3,perf(set_spacing(17.0))),~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U B(follower3,spacing()),T U A(follower3,perf(set_spacing(17.0))),
True in next State: ~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U A(follower3,perf(set_spacing(17.0))),
Number: 106
Incoming States: 0,6,14,22,36,44,62,71,91,106,
True in this State: B(follower3,spacing()),A(follower3,perf(set_spacing(17.0))),~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),T U B(follower3,spacing()),T U A(follower3,perf(set_spacing(17.0))),
True in next State: ~T R ~ItD(follower3,send(leader(),1.0,set_spacing_from(follower3()))),~T R ~B(follower3,spacing(17.0)) \/ T U A(follower3,perf(set_spacing(17.0))),~T R ~A(follower3,perf(set_spacing(17.0))) \/ T U B(follower3,spacing()),

[INFO] Adding 0 to []
[INFO] vehicle_id
[INFO] vehicle_name
[INFO] name_front_follower1
[INFO] Adding 1 to [0]
[INFO] Adding 2 to [0, 1]
[INFO] No assert_ready_to_join
[INFO] No assert ready_to_leave
[INFO] Adding 3 to [0, 1, 2]
[INFO] No assert_changed_lane
[INFO] Adding 4 to [0, 1, 2, 3]
[INFO] No assert_initial_distance
[INFO] Adding 5 to [0, 1, 2, 3, 4]
[INFO] Adding 6 to [0, 1, 2, 3, 4, 5]
[INFO] Not assert_spacing_x
[INFO] No assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
empty:: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]

[]
[INFO] Not assert_spacing_x
[INFO] assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
empty:: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]

[]
[INFO] Adding 9 to [0, 1, 2, 3, 4, 5]
[INFO] assert_spacing_x
[INFO] No assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
empty:: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]

[]
[INFO] assert_spacing_x
[INFO] assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
empty:: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]

[]
[INFO] assert_initial_distance
[INFO] Adding 10 to [0, 1, 2, 3, 4]
[INFO] Adding 11 to [0, 1, 2, 3, 4, 10]
[INFO] Not assert_spacing_x
[INFO] No assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
empty:: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]

[]
[INFO] Not assert_spacing_x
[INFO] assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
empty:: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]

[]
[INFO] Adding 12 to [0, 1, 2, 3, 4, 10]
[INFO] assert_spacing_x
[INFO] No assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
empty:: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]

[]
[INFO] assert_spacing_x
[INFO] assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
empty:: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]

[]
[INFO] assert_changed_lane
[INFO] Adding 13 to [0, 1, 2, 3]
[INFO] No assert_initial_distance
[INFO] Adding 14 to [0, 1, 2, 3, 13]
[INFO] Adding 15 to [0, 1, 2, 3, 13, 14]
[INFO] Not assert_spacing_x
[INFO] No assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
empty:: 

[source(self):: 
   *  +changed_lane||True||npy()||[]
, source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]

[]
[INFO] Not assert_spacing_x
[INFO] assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
empty:: 

[source(self):: 
   *  +changed_lane||True||npy()||[]
, source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]

[]
[INFO] Adding 16 to [0, 1, 2, 3, 13, 14]
[INFO] assert_spacing_x
[INFO] No assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
empty:: 

[source(self):: 
   *  +changed_lane||True||npy()||[]
, source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]

[]
[INFO] assert_spacing_x
[INFO] assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
empty:: 

[source(self):: 
   *  +changed_lane||True||npy()||[]
, source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]

[]
[INFO] assert_initial_distance
[INFO] Adding 17 to [0, 1, 2, 3, 13]
[INFO] Adding 18 to [0, 1, 2, 3, 13, 17]
[INFO] Not assert_spacing_x
[INFO] No assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
empty:: 

[source(self):: 
   *  +changed_lane||True||npy()||[]
, source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[]

[]
[INFO] Not assert_spacing_x
[INFO] assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
empty:: 

[source(self):: 
   *  +changed_lane||True||npy()||[]
, source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[]
[]

[]
[INFO] Adding 19 to [0, 1, 2, 3, 13, 17]
[INFO] assert_spacing_x
[INFO] No assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
empty:: 

[source(self):: 
   *  +changed_lane||True||npy()||[]
, source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[]
[]

[]
[INFO] assert_spacing_x
[INFO] assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
empty:: 

[source(self):: 
   *  +changed_lane||True||npy()||[]
, source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +changed_lane||True||npy()||[]

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]
source(self):: 

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[changed_lane/0-changed_lane, , id/1-id(3), , initial_distance/0-initial_distance, , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[]
[]

[]
[INFO] No assert_ready_to_join
[INFO] assert ready_to_leave
[INFO] Adding 20 to [0, 1, 2]
[INFO] No assert_changed_lane
[INFO] Adding 21 to [0, 1, 2, 20]
[INFO] No assert_initial_distance
[INFO] Adding 22 to [0, 1, 2, 20, 21]
[INFO] Adding 23 to [0, 1, 2, 20, 21, 22]
[INFO] Not assert_spacing_x
[INFO] No assert_spacing
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
empty:: 

[source(self):: 
   *  +id(3)||True||npy()||[]
, source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +ready_to_leave||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +ready_to_leave||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +id(3)||True||npy()||[X-3, X0-3, X1-3, X2-3]

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +ready_to_leave||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +ready_to_leave||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name(follower3)||True||npy()||[]
, source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +ready_to_leave||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +ready_to_leave||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +name(follower3)||True||npy()||[]

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +ready_to_leave||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 

[source(self):: 
   *  +name_front(follower1)||True||npy()||[]
, source(self):: 
   *  +ready_to_leave||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +ready_to_leave||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +name_front(follower1)||True||npy()||[]

[source(self):: 
   *  +ready_to_leave||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 

[source(self):: 
   *  +ready_to_leave||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +ready_to_leave||True||npy()||[]

[]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +ready_to_leave||True||npy()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +ready_to_leave||True||-leave_agreement(follower3)()||[]
      +ready_to_leave||True||-leave_ok()||[]
      +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Handle Drop Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +ready_to_leave||True||-leave_ok()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +ready_to_leave||True||-leave_ok()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +ready_to_leave||True||-leave_ok()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +ready_to_leave||True||-leave_ok()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Handle Drop Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[]
[]
source(self):: 
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[leave_platoon/0-[_aleave_platoon()]]
[]
source(self):: 
   *  +!_aleave_platoon()||True||npy()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[leave_platoon/0-[_aleave_platoon()]]
[]
source(self):: 
   *  +!_aleave_platoon()||True||npy()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[leave_platoon/0-[_aleave_platoon()]]
[]
source(self):: 
   *  +!_aleave_platoon()||True||npy()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[leave_platoon/0-[_aleave_platoon()]]
[]
source(self):: 
   *  +!_aleave_platoon()||True||send(message(X,0),leader)1()||[X-follower3]
      +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[INFO] follower3 about to do send(message(follower3,0),leader)1
[INFO] vehicle_id
[INFO] vehicle_name
[INFO] name_front_follower1
[INFO] Adding 24 to [0, 1, 2, 20, 21, 22, 23]
[INFO] Adding 25 to [0, 1, 2, 20, 21, 22, 23, 24]
[INFO] No assert_ready_to_join
[INFO] No assert ready_to_leave
[INFO] Adding 26 to [0, 1, 2, 20, 21, 22, 23, 24, 25]
[INFO] No assert_changed_lane
[INFO] Adding 27 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26]
[INFO] No assert_initial_distance
[INFO] Adding 28 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27]
[INFO] Adding 29 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28]
[INFO] Not assert_spacing_x
[INFO] No assert_spacing
[INFO] Adding 30 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]
[INFO] Adding 31 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 32 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]
[INFO] Adding 33 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 34 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:message(follower3,0), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(self):: 
   *  +<mid,thid,follower3,1,leader,message(follower3,0)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(self):: 
   *  +<mid,thid,follower3,1,leader,message(follower3,0)>||True||npy()||[]
, source(percept):: 
   *  xready_to_leave||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,message(follower3,0)>||True||npy()||[]

[source(percept):: 
   *  xready_to_leave||True||npy()||[]
, source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,message(follower3,0)>||True||npy()||[]

[source(percept):: 
   *  xready_to_leave||True||npy()||[]
, source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 

[source(percept):: 
   *  xready_to_leave||True||npy()||[]
, source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(percept):: 
   *  xready_to_leave||True||npy()||[]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(percept):: 
   *  xready_to_leave||True||npy()||[]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(percept):: 

[source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Handle Wait For Direct
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
empty:: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:message(follower3,0), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , ready_to_leave/0-ready_to_leave, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(self):: 
   *  +<mid,thid,follower3,1,leader,message(follower3,0)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(self):: 
   *  +<mid,thid,follower3,1,leader,message(follower3,0)>||True||npy()||[]
, source(percept):: 
   *  xready_to_leave||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(self):: 
   *  +<mid,thid,follower3,1,leader,message(follower3,0)>||True||npy()||[]
, source(percept):: 
   *  xready_to_leave||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,message(follower3,0)>||True||npy()||[]

[source(percept):: 
   *  xready_to_leave||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,message(follower3,0)>||True||npy()||[]

[source(percept):: 
   *  xready_to_leave||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 

[source(percept):: 
   *  xready_to_leave||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(percept):: 
   *  xready_to_leave||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(percept):: 
   *  xready_to_leave||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(percept):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(X)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
]
[FINE] Applying Handle Wait For Direct
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3, X1-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||send(set_spacing_from_failed(X10,K),leader)1()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), K-follower3, To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3, X1-17, X10-17]
      +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), K-follower3, To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3, X1-17, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] follower3 about to do send(set_spacing_from_failed(17,follower3),leader)1
[INFO] vehicle_id
[INFO] vehicle_name
[INFO] name_front_follower1
[INFO] Adding 36 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]
[INFO] Adding 37 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36]
[INFO] No assert_ready_to_join
[INFO] No assert ready_to_leave
[INFO] Adding 38 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37]
[INFO] No assert_changed_lane
[INFO] Adding 39 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38]
[INFO] No assert_initial_distance
[INFO] Adding 40 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39]
[INFO] Adding 41 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40]
[INFO] Not assert_spacing_x
[INFO] No assert_spacing
[INFO] Adding 42 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41]
[INFO] Adding 43 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 44 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43]
[INFO] Adding 45 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 46 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 47 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 48 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 49 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 50 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_joing_agreement
[INFO] assert_leave_agreement
[INFO] Adding 51 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43]
[INFO] Adding 52 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 53 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +leave_agreement(follower3)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +leave_agreement(follower3)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +leave_agreement(follower3)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +leave_agreement(follower3)||True||npy()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +leave_agreement(follower3)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(self):: 
   *  +leave_agreement(follower3)||True||npy()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(self):: 
   *  +leave_agreement(follower3)||True||npy()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...leave_agreement(follower3)()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(self):: 
   *  +leave_agreement(follower3)||True||npy()||[]
]
[FINE] Applying Handle Wait For Direct
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(self):: 
   *  +leave_agreement(follower3)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +leave_agreement(follower3)||True||npy()||[]

[source(self):: 
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +leave_agreement(follower3)||True||npy()||[]

[source(self):: 
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||npy()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||npy()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||npy()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||perf(join_ok(0))()||[X-follower3]
      +!_aleave_platoon()||True||+*...changed_lane()||[X-follower3]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[INFO] follower3 about to do perf(join_ok(0))
[INFO] vehicle_id
[INFO] vehicle_name
[INFO] name_front_follower1
[INFO] Adding 54 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53]
[INFO] Adding 55 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54]
[INFO] No assert_ready_to_join
[INFO] No assert ready_to_leave
[INFO] Adding 56 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55]
[INFO] No assert_changed_lane
[INFO] Adding 57 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56]
[INFO] No assert_initial_distance
[INFO] Adding 58 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57]
[INFO] Adding 59 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58]
[INFO] Not assert_spacing_x
[INFO] No assert_spacing
[INFO] Adding 60 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59]
[INFO] Adding 61 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 62 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61]
[INFO] Adding 63 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 64 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done perf(join_ok(0))
[FINE] Applying Handle General Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] setting wanttosleep for agent
[FINE] Applying Handle Wait For Direct
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
empty:: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done perf(join_ok(0))
[FINE] Applying Handle General Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
]
[FINE] Applying Handle Wait For Direct
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]

[source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(17)()||True||npy()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3, X1-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||send(set_spacing_from_failed(X10,K),leader)1()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), K-follower3, To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3, X1-17, X10-17]
      +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), K-follower3, To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3, X1-17, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] follower3 about to do send(set_spacing_from_failed(17,follower3),leader)1
[INFO] vehicle_id
[INFO] vehicle_name
[INFO] name_front_follower1
[INFO] Adding 65 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64]
[INFO] Adding 66 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65]
[INFO] No assert_ready_to_join
[INFO] No assert ready_to_leave
[INFO] Adding 67 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66]
[INFO] No assert_changed_lane
[INFO] Adding 68 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67]
[INFO] No assert_initial_distance
[INFO] Adding 69 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]
[INFO] Adding 70 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69]
[INFO] Not assert_spacing_x
[INFO] No assert_spacing
[INFO] Adding 71 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70]
[INFO] Adding 72 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 73 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]
[INFO] Adding 74 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 75 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 76 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 77 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 78 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 79 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_joing_agreement
[INFO] assert_leave_agreement
[INFO] Adding 80 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72]
[INFO] Adding 81 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 82 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 81]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 83 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 81]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 84 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 85 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 84]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 86 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 84]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 87 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71]
[INFO] assert_join_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 88 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87]
[INFO] Adding 89 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 88]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 90 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 88, 89]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 91 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 88, 89]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 92 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 88]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 93 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 88, 92]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 94 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 88, 92]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 95 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87]
[INFO] Adding 96 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 95]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 97 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 95, 96]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 98 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 95, 96]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 99 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 95]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 100 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 95, 99]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 101 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 95, 99]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_spacing_x
[INFO] assert_spacing
[INFO] Adding 102 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70]
[INFO] Adding 103 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 104 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103]
[INFO] Adding 105 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 104]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 106 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 104, 105]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 107 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 104, 105]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 108 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 104]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 109 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 104, 108]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 110 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 104, 108]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_joing_agreement
[INFO] assert_leave_agreement
[INFO] Adding 111 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103]
[INFO] Adding 112 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 111]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 113 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 111, 112]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 114 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 111, 112]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 115 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 111]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 116 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 111, 115]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 117 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 111, 115]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 118 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102]
[INFO] assert_join_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 119 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118]
[INFO] Adding 120 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 119]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 121 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 119, 120]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 122 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 119, 120]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 123 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 119]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 124 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 119, 123]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 125 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 119, 123]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 126 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118]
[INFO] Adding 127 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 126]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 128 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 126, 127]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 129 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 126, 127]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 130 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 126]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 131 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 126, 130]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 132 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 118, 126, 130]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 133 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69]
[INFO] assert_spacing_x
[INFO] No assert_spacing
[INFO] Adding 134 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133]
[INFO] Adding 135 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 136 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135]
[INFO] Adding 137 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 136]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 138 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 136, 137]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 139 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 136, 137]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 140 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 136]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 141 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 136, 140]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 142 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 136, 140]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_joing_agreement
[INFO] assert_leave_agreement
[INFO] Adding 143 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135]
[INFO] Adding 144 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 143]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 145 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 143, 144]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 146 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 143, 144]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 147 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 143]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 148 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 143, 147]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 149 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 135, 143, 147]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 150 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134]
[INFO] assert_join_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 151 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150]
[INFO] Adding 152 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 151]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 153 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 151, 152]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 154 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 151, 152]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 155 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 151]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 156 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 151, 155]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 157 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 151, 155]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 158 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150]
[INFO] Adding 159 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 158]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 160 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 158, 159]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 161 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 158, 159]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 162 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 158]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 163 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 158, 162]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 164 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 134, 150, 158, 162]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_spacing_x
[INFO] assert_spacing
[INFO] Adding 165 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133]
[INFO] Adding 166 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 167 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166]
[INFO] Adding 168 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 167]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 169 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 167, 168]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 170 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 167, 168]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 171 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 167]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 172 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 167, 171]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 173 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 167, 171]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_joing_agreement
[INFO] assert_leave_agreement
[INFO] Adding 174 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166]
[INFO] Adding 175 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 174]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 176 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 174, 175]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 177 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 174, 175]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 178 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 174]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 179 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 174, 178]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 180 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 166, 174, 178]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 181 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165]
[INFO] assert_join_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 182 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181]
[INFO] Adding 183 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 182]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 184 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 182, 183]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 185 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 182, 183]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 186 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 182]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 187 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 182, 186]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 188 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 182, 186]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 189 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181]
[INFO] Adding 190 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 189]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 191 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 189, 190]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 192 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 189, 190]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 193 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 189]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 194 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 189, 193]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 195 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 133, 165, 181, 189, 193]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing||True||npy()||[]
, source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing||True||npy()||[]

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +spacing(17)||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +spacing(17)||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , spacing/0-spacing, , spacing/1-spacing(17), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_initial_distance
[INFO] Adding 196 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68]
[INFO] Adding 197 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196]
[INFO] Not assert_spacing_x
[INFO] No assert_spacing
[INFO] Adding 198 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197]
[INFO] Adding 199 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 200 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199]
[INFO] Adding 201 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 200]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 202 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 200, 201]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 203 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 200, 201]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 204 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 200]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 205 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 200, 204]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 206 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 200, 204]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_joing_agreement
[INFO] assert_leave_agreement
[INFO] Adding 207 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199]
[INFO] Adding 208 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 207]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 209 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 207, 208]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 210 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 207, 208]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 211 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 207]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 212 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 207, 211]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 213 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 199, 207, 211]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,leave_agreement(follower3)>||True||npy()||[B-leave_agreement(follower3), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-leave_agreement(follower3), B0-leave_agreement(follower3), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 214 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198]
[INFO] assert_join_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 215 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 214]
[INFO] Adding 216 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 214, 215]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 217 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 214, 215, 216]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 218 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 214, 215, 216]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Adding 219 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 214, 215]
[INFO] assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 220 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 214, 215, 219]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,platoon_m>||True||npy()||[B-platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-platoon_m, B0-platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , platoon_m/0-platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 221 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 214, 215, 219]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,join_agreement(follower3,follower1)>||True||npy()||[B-join_agreement(follower3,follower1), From-leader, To-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-join_agreement(follower3,follower1), B0-join_agreement(follower3,follower1), From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,3,follower3,set_spacing(17)>||True||npy()||[From-leader, From0-leader, From1-leader, G-set_spacing(17), To-follower3, To0-follower3, To1-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Achieve Test Goal with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +join_agreement(follower3,follower1)||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , join_agreement/2-join_agreement(follower3,follower1), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_joing_agreement
[INFO] Not assert_leave_agreement
[INFO] Adding 222 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 214]
[INFO] Adding 223 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 214, 222]
[INFO] Not assert_platoon_m
[INFO] Not assert_no_platoon_m
[INFO] Adding 224 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 214, 222, 223]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_platoon_m
[INFO] assert_no_platoon_m
[INFO] Adding 225 to [0, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 196, 197, 198, 214, 222, 223]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
[FINE] Applying Handle Send Action
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
]
[FINE] Applying Direct Perception with Events
[FINE] follower3
=============
After Stage StageE :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
]
[FINE] Applying Handle Messages
[FINE] follower3
=============
After Stage StageF :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]
, source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
]
[FINE] Applying Select Intention not Unplanned Problem Goal
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +<mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>||True||npy()||[]

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(self):: 
   *  +initial_distance||True||npy()||[]
, source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +initial_distance||True||npy()||[]

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]
, source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +<mid,thid,leader,1,follower3,no_platoon_m>||True||npy()||[B-no_platoon_m, From-leader, To-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +message(mid,thid,From0,To0,1,B0)||True||+B0()||[B-no_platoon_m, B0-no_platoon_m, From-leader, From0-leader, To-follower3, To0-follower3]

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Add Belief with Event
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
, source(self):: 
   *  +no_platoon_m||True||npy()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans If Non-Empty
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()], set_spacing/1-[_aset_spacing(17)()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 
   *  +!_aset_spacing(X10)()||True||-!_aset_spacing(X10)()()||[From4-leader, G0-set_spacing(17), To4-follower3, X10-17]
   *  +message(mid,thid,From4,To4,3,G0)||True||+!_aG0()()||[From-leader, From0-leader, From1-leader, From2-leader, From3-leader, From4-leader, G-set_spacing(17), G0-set_spacing(17), To-follower3, To0-follower3, To1-follower3, To2-follower3, To3-follower3, To4-follower3]

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Handle Drop General Goal
[FINE] follower3
=============
After Stage StageD :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(leader):: 

[source(self):: 
   *  +no_platoon_m||True||npy()||[]
, SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Drop Intention If Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying Generate Applicable Plans Empty with Problem Goal
[FINE] follower3
=============
After Stage StageB :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 
   *  +no_platoon_m||True||npy()||[]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] Applying ApplyApplicablePlans
[FINE] follower3
=============
After Stage StageC :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]
source(self):: 

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[FINE] setting wanttosleep for agent
[FINE] Applying Sleep if Empty
[FINE] follower3
=============
After Stage StageA :
[id/1-id(3), , initial_distance/0-initial_distance, , leave_agreement/1-leave_agreement(follower3), , name/1-name(follower3), , name_front/1-name_front(follower1), , no_platoon_m/0-no_platoon_m, ]
[leave_platoon/0-[_aleave_platoon()]]
[<mid,thid,follower3,1,leader,message(follower3,0)>, <mid,thid,follower3,1,leader,set_spacing_from_failed(17,follower3)>]

[SUSPENDED
source(self):: 
   *  +!_aleave_platoon()||True||+*...changed_lane()||[]
   *  +ready_to_leave||True||+!_aleave_platoon()()||[]
]
[INFO] Not assert_set_spacing_goal
[INFO] follower3 done send(1:set_spacing_from_failed(17,follower3), leader)
